<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
    <metadata>
        <id>Interlocker.Source</id>
        <version>1.1.0</version>
        <title>Interlocker (C# Source)</title>
        <authors>Atif Aziz</authors>
        <owners>Atif Aziz</owners>
        <licenseUrl>http://www.apache.org/licenses/LICENSE-2.0</licenseUrl>
        <projectUrl>https://github.com/atifaziz/Interlocker</projectUrl>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <copyright>Copyright &#169; 2015 Atif Aziz. All rights reserved.</copyright>
        <summary>Tiny library encapsulating boilerplate code for interlocked updates using Interlocked.CompareExchange.</summary>
        <description>Tiny library encapsulating boilerplate code for interlocked updates using Interlocked.CompareExchange.

This package is for direct inclusion in a C# project (compatible with C# language versions 6 and above). All types will remain internal to the project.</description>
        <language>en-US</language>
        <tags>threading concurrency interlocked cmpxchg</tags>
        <releaseNotes>Adding Tuple-returning Interlocked&lt;T&gt;.Update overload with iteration argument.</releaseNotes>
    </metadata>
    <files>
        <file src="*.cs" target="content\App_Packages\Interlocker"
              exclude="AssemblyInfo*.cs;Public.cs;*Tests.cs" />
        <file src="COPYING.txt" target="COPYING.txt" />
    </files>
</package>